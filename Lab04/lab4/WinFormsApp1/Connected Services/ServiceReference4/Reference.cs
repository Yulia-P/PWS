//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторного создания кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference4
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="A", Namespace="http://tav/")]
    public partial class A : object
    {
        
        private string sField;
        
        private int kField;
        
        private float fField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string s
        {
            get
            {
                return this.sField;
            }
            set
            {
                this.sField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int k
        {
            get
            {
                return this.kField;
            }
            set
            {
                this.kField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public float f
        {
            get
            {
                return this.fField;
            }
            set
            {
                this.fField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tav/", ConfigurationName="ServiceReference4.SimplexSoap")]
    public interface SimplexSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tav/add", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference4.add1> AddAsync(ServiceReference4.add request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tav/concat", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference4.concat1> ConcatAsync(ServiceReference4.concat request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tav/sum", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference4.sum1> SumAsync(ServiceReference4.sum request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tav/adds", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference4.adds1> AddsAsync(ServiceReference4.adds request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="add", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class add
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public int x;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=1)]
        public int y;
        
        public add()
        {
        }
        
        public add(int x, int y)
        {
            this.x = x;
            this.y = y;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addResponse", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class add1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public int addResult;
        
        public add1()
        {
        }
        
        public add1(int addResult)
        {
            this.addResult = addResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="concat", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class concat
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public string s;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=1)]
        public double d;
        
        public concat()
        {
        }
        
        public concat(string s, double d)
        {
            this.s = s;
            this.d = d;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="concatResponse", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class concat1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public string concatResult;
        
        public concat1()
        {
        }
        
        public concat1(string concatResult)
        {
            this.concatResult = concatResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sum", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class sum
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public ServiceReference4.A msu1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=1)]
        public ServiceReference4.A msu2;
        
        public sum()
        {
        }
        
        public sum(ServiceReference4.A msu1, ServiceReference4.A msu2)
        {
            this.msu1 = msu1;
            this.msu2 = msu2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sumResponse", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class sum1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public ServiceReference4.A sumResult;
        
        public sum1()
        {
        }
        
        public sum1(ServiceReference4.A sumResult)
        {
            this.sumResult = sumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="adds", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class adds
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public int x;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=1)]
        public int y;
        
        public adds()
        {
        }
        
        public adds(int x, int y)
        {
            this.x = x;
            this.y = y;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addsResponse", WrapperNamespace="http://tav/", IsWrapped=true)]
    public partial class adds1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tav/", Order=0)]
        public int addsResult;
        
        public adds1()
        {
        }
        
        public adds1(int addsResult)
        {
            this.addsResult = addsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface SimplexSoapChannel : ServiceReference4.SimplexSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class SimplexSoapClient : System.ServiceModel.ClientBase<ServiceReference4.SimplexSoap>, ServiceReference4.SimplexSoap
    {
        
        /// <summary>
        /// Реализуйте этот разделяемый метод для настройки конечной точки службы.
        /// </summary>
        /// <param name="serviceEndpoint">Настраиваемая конечная точка</param>
        /// <param name="clientCredentials">Учетные данные клиента.</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SimplexSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(SimplexSoapClient.GetBindingForEndpoint(endpointConfiguration), SimplexSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SimplexSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SimplexSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SimplexSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SimplexSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SimplexSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference4.add1> ServiceReference4.SimplexSoap.AddAsync(ServiceReference4.add request)
        {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference4.add1> AddAsync(int x, int y)
        {
            ServiceReference4.add inValue = new ServiceReference4.add();
            inValue.x = x;
            inValue.y = y;
            return ((ServiceReference4.SimplexSoap)(this)).AddAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference4.concat1> ServiceReference4.SimplexSoap.ConcatAsync(ServiceReference4.concat request)
        {
            return base.Channel.ConcatAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference4.concat1> ConcatAsync(string s, double d)
        {
            ServiceReference4.concat inValue = new ServiceReference4.concat();
            inValue.s = s;
            inValue.d = d;
            return ((ServiceReference4.SimplexSoap)(this)).ConcatAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference4.sum1> ServiceReference4.SimplexSoap.SumAsync(ServiceReference4.sum request)
        {
            return base.Channel.SumAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference4.sum1> SumAsync(ServiceReference4.A msu1, ServiceReference4.A msu2)
        {
            ServiceReference4.sum inValue = new ServiceReference4.sum();
            inValue.msu1 = msu1;
            inValue.msu2 = msu2;
            return ((ServiceReference4.SimplexSoap)(this)).SumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference4.adds1> ServiceReference4.SimplexSoap.AddsAsync(ServiceReference4.adds request)
        {
            return base.Channel.AddsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference4.adds1> AddsAsync(int x, int y)
        {
            ServiceReference4.adds inValue = new ServiceReference4.adds();
            inValue.x = x;
            inValue.y = y;
            return ((ServiceReference4.SimplexSoap)(this)).AddsAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SimplexSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SimplexSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SimplexSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:44349/Simplex.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.SimplexSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:44349/Simplex.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SimplexSoap,
            
            SimplexSoap12,
        }
    }
}
